- var utils = locals.utils
- var state = locals.state
- var optionlg = "form-control input-lg text-center noborder"
mixin swapbutton(name, path, style)
	if state.data && state.data.enabled
		button.btn.btn-success(class=style onClick=utils.view_swap(state, path))= name
	else
		button.btn.btn-default(class=style onClick=utils.view_swap(state, path))= name
mixin selectitems(list, path, dict)
	- var currentval = utils.jf.get_in(state, path)
	- var this_val = list.filter(function(el){return (el == currentval);})[0]
	- var placeholder = ((this_val == currentval) ? dict[this_val] : "ничего не выбрано")
	select.selectpicker.form-control.input-lg(onChange=utils.view_set(state, path) data-live-search="true" title=placeholder)
		each el in list
			option(key=el value=el class=optionlg)= dict[el]
mixin selectitems_multiple(list, path, dict, placeholder)
	- var currentval = utils.jf.get_in(state, path)
	- var this_val = (currentval ? currentval : []).map(function(el){return el.toString();})
	select.selectpicker.form-control.input-lg(multiple onChange=utils.multiple_select(state, path) data-live-search="true" defaultValue=this_val title=placeholder)
		each el in list
			option(key=el value=el class=optionlg)= dict[el]
mixin fileinput(path)
	div.btn.btn-default.btn-lg.btn-file.fill Browse or drag and drop files
		input(type="file" multiple="true" onChange=utils.view_files(state, path))
mixin select_room_location()
	div.btn-group.ml.mt
		- var defval = "все базы"
		- var title = (state.ids.location ? state.response_state.locations.filter(function(el){return el.id.compare(state.ids.location) == 0;})[0].name : defval)
		select.selectpicker.form-control.input-lg(id="location_selectpicker" onChange=utils.set_location(state) title=title data-live-search="true")
			each el in state.response_state.locations.concat({id: "", name: defval})
				option(key="select_room_location"+el.id+"location" class=optionlg value=el.id)= el.name
	if state.ids.location
		- var rooms = state.response_state.rooms.filter(function(el){return el.location_id.compare(state.ids.location) == 0;})
		- var defval = "все комнаты"
		- var title = (state.ids.room ? rooms.filter(function(el){return el.id.compare(state.ids.room) == 0;})[0].name : defval)
		div.btn-group.ml.mt
			select.selectpicker.form-control.input-lg(id="room_selectpicker" onChange=utils.set_room(state, ["ids","room"]) title=title data-live-search="true")
				each el in rooms.concat({id: "", name: defval})
					option(key="select_room_location"+el.id+"room" class=optionlg value=el.id style=(el.color ? "backgroundColor:"+el.color : ""))= el.name
mixin navbar()
	div.container-fluid
		div.row.text-center
			div.form-inline(id="datepair")
				div.btn-group.ml.mt.staticform
					input.form-control.input-lg.date.start(type="text" placeholder="дата начала")
				div.btn-group.ml.mt.staticform
					input.form-control.input-lg.time.start(type="text" placeholder="время начала")
				div.btn-group.ml.mt.staticform
					input.form-control.input-lg.time.end(type="text" placeholder="время окончания")
				div.btn-group.ml.mt.staticform
					input.form-control.input-lg.date.end(type="text" placeholder="дата окончания")
				div.btn-group.ml.mt.staticform
					+selectitems_multiple(["WD_1","WD_2","WD_3","WD_4","WD_5","WD_6","WD_7"], ["ids","week_days"], state.verbose.week_days, "день недели")
				+select_room_location()
mixin timeline(hours, room)
	table.table.table-condensed.table-bordered.noborder.text-left
		tbody
			tr
				each h in hours
					td(style=(utils.check_time_cell(h, room, state) ? ("backgroundColor:"+room.color) : ""))= h.get('hour')
mixin location_content(location, moment)
	- var rooms = utils.get_rooms(state, location)
	table.table.table-condensed.text-center.noborder(class=((rooms.length > 1) ? "table-bordered" : ""))
		tbody
			each room in rooms
				- var color = "backgroundColor:"+net.brehaut.Color(room.color).setAlpha(0.3).toString()
				tr(style=color)
					if (rooms.length > 1)
						td.btn-default.cpointer(onClick=utils.table_set_room(state, room) style=color)
							div.deg90.nowrapword= " "+room.name+" "
					td.fill.no-bleft
						+timeline(utils.get_hours_list(moment, state), room)
mixin location_table(moment)
	- var locations = utils.get_locations(state)
	table.table.table-condensed.text-center.noborder(class=((locations.length > 1) ? "table-bordered" : ""))
		tbody
			each location in locations
				tr
					if (locations.length > 1)
						td.btn-default.cpointer(onClick=utils.table_set_location(state, location.id))
							div.deg90.nowrapword= " "+location.name+" "
					td.fill.no-bleft
						+location_content(location, moment)
mixin main()
	if state.response_state
		div.container-fluid.mt
			- var days = utils.get_days_list( state.response_state.sessions, state )
			table.table.table-condensed.text-center(class=((days.length > 1) ? "table-bordered" : ""))
				tbody
					each moment in days
						tr
							if (days.length > 1)
								td.btn-default.cpointer(onClick=utils.table_set_date(moment))
									div.deg90.nowrapword= " "+moment.format('YYYY-MM-DD')+" "+state.verbose.week_days[utils.moment2wd(moment)]+" "
							td.fill.no-bleft
								+location_table(moment)
//
//	CONTENT
//
+navbar()
+main()
